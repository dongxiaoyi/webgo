package main

import (
	//"fmt"
	"github.com/gin-gonic/gin"
	_ "./docs" // docs is generated by Swag CLI, you have to import it.
	"github.com/swaggo/gin-swagger"
	"github.com/swaggo/gin-swagger/swaggerFiles"
	userprofile_v"webgo/apps/userprofile/view"
	"webgo/log"
	"webgo/setting"
	userprofile_m "webgo/apps/userprofile/middlewares"
	"github.com/gin-contrib/cors"
)

func main() {
	// Add a logger
	var logger log.Logging
	logger.GetLogger()
	defer logger.Close()

	// Load config
	var config setting.Config
	config.LoadConfig()

	r := gin.Default()

	v1 := r.Group("api/v1")
	{
		v1.POST("user/register", userprofile_v.RegisterView)
		v1.POST("user/login", userprofile_v.LoginView)
		v1.POST("user/delete", userprofile_v.DeleteAccountView)
	}

	test := r.Group("api/test")
	r.Use(userprofile_m.JWTAuth()) //token auth

	//e := casbin.NewEnforcer("webgo/apps/userprofile/middlewares/authz_model.conf", "webgo/apps/userprofile/middlewares/authz_policy.csv")
	//test.Use(authz.NewAuthorizer(e)) // role auth
	test.Use(cors.Default())
	{
		test.GET("getdatabytime", userprofile_v.GetDataByTime)
	}

	r.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))
	r.Run(":80")
}



